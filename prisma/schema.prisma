generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("admin")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  hasChangedPassword Boolean @default(false)
  resetToken String?
  resetTokenExpiry DateTime?
}

model Carousel {
  id            String   @id @default(cuid())
  title         String?
  imageUrl      String
  linkUrl       String?
  order         Int
  isActive      Boolean  @default(true)
  textPosition  String   @default("center")
  textDirection String   @default("horizontal")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  linkText      String?
}

model Project {
  id          String     @id @default(cuid())
  title       String
  description String?
  category    String
  details     Json?
  order       Int
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  documents   Document[]
  images      ProjectImage[]
}

model ProjectImage {
  id        String   @id @default(cuid())
  imageUrl  String
  order     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
}

model Document {
  id           String   @id @default(cuid())
  title        String
  description  String?
  fileUrl      String
  fileType     String
  category     String
  order        Int
  isActive     Boolean  @default(true)
  downloadCount Int      @default(0)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  imageUrl     String?
  projectId    String?
  project      Project? @relation(fields: [projectId], references: [id])
}

model ContactSubmission {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  message   String
  status    String   @default("new")
  reply     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  archived  Boolean  @default(false)
}

model SiteSettings {
  id          String   @id @default(cuid())
  type        String
  key         String
  value       String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([type, key])
}
